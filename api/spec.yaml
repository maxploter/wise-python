openapi: 3.1.1
info:
  title: (TransferWise) Wise Platform API
  version: 0.5.0
  description: |
    Comprehensive API for (TransferWise) Wise platform services including:
    - Profile
    - Activity tracking and management
    - Quote creation and management
    - Recipient
    - Transfer
  contact:
    name: Max Ploter
    email: maksim.ploter@gmail.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: https://api.sandbox.transferwise.tech
tags:
  - name: Profiles
    description: Operations for managing personal and business profiles
  - name: Activities
    description: Operations for tracking profile activities
  - name: Quotes
    description: Operations for creating and managing currency exchange quotes
  - name: Recipients
    description: Operations for managing recipient accounts
  - name: Transfers
    description: Operations for creating and managing money transfers
components:
  schemas:
    ProfileId:
      type: integer
      format: int64
      minimum: 1
      description: A unique profile identifier
      example: 25

    TransferId:
      type: integer
      format: int64
      minimum: 1
      description: A unique transfer identifier
      example: 16521632

    UserId:
      type: integer
      format: int64
      minimum: 1
      description: A unique user identifier
      example: 12345

    QuoteId:
      type: string
      format: uuid
      description: A unique quote identifier in GUID format
      example: "8fa9be20-ba43-4b15-abbb-9424e1481050"

    RecipientId:
      type: integer
      format: int64
      minimum: 1
      description: A unique recipient account identifier
      example: 8692237

    Currency:
      type: string
      pattern: '^[A-Z]{3}$'
      minLength: 3
      maxLength: 3
      description: ISO 4217 three-letter currency code
      example: GBP

    Address:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 36086782
        addressFirstLine:
          type: string
          example: "24 Willow Creek Lane"
        city:
          type: string
          example: "Bristol"
        countryIso2Code:
          type: string
          pattern: '^[A-Z]{2}$'
          example: "GB"
        countryIso3Code:
          type: string
          pattern: '^[a-z]{3}$'
          example: "gbr"
        postCode:
          type: string
          example: "BS1 6AE"
        stateCode:
          type: string
          nullable: true
          example: null

    ProfileContactDetails:
      type: object
      description: Contact information for a profile
      properties:
        email:
          type: string
          format: email
          example: "contact@example.com"
        phoneNumber:
          type: string
          example: "+447700900123"

    PersonalProfile:
      type: object
      properties:
        type:
          type: string
          example: "PERSONAL"
        id:
          $ref: '#/components/schemas/ProfileId'
        publicId:
          type: string
          format: uuid
          description: Public identifier for the profile
          example: "a1b2c3d4-e5f6-7890-1234-567890abcdef"
        userId:
          $ref: '#/components/schemas/UserId'
        address:
          $ref: '#/components/schemas/Address'
        email:
          type: string
          format: email
          example: "sarah.jenkins@example.com"
        createdAt:
          type: string
          format: date-time
          example: "2023-01-15T10:30:00"
        updatedAt:
          type: string
          format: date-time
          example: "2025-06-18T14:20:00"
        avatar:
          type: string
          example: "https://example.com/avatars/sarah_jenkins.png"
        currentState:
          type: string
          description: "The current state of the profile. Common values include VISIBLE, HIDDEN, SUSPENDED."
          example: "VISIBLE"
        contactDetails:
          $ref: '#/components/schemas/ProfileContactDetails'
        firstName:
          type: string
          example: "Sarah"
        lastName:
          type: string
          example: "Jenkins"
        preferredName:
          type: string
          nullable: true
          example: "Sal"
        dateOfBirth:
          type: string
          format: date
          example: "1985-05-20"
        phoneNumber:
          type: string
          example: "+447700900456"
        secondaryAddresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
          example: []
        fullName:
          type: string
          example: "Sarah Jenkins"

    BusinessProfile:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ProfileId'
        type:
          type: string
          example: "BUSINESS"
        publicId:
          type: string
          format: uuid
          description: Public identifier for the profile
          example: "f0e9d8c7-b6a5-4321-fedc-ba9876543210"
        userId:
          $ref: '#/components/schemas/UserId'
        address:
          $ref: '#/components/schemas/Address'
        email:
          type: string
          format: email
          example: "info@innovate-solutions.co.uk"
        createdAt:
          type: string
          format: date-time
          example: "2024-03-10T09:00:00"
        updatedAt:
          type: string
          format: date-time
          example: "2025-06-18T14:22:00"
        currentState:
          type: string
          description: "The current state of the profile. Common values include VISIBLE, HIDDEN, SUSPENDED."
          example: "VISIBLE"
        contactDetails:
          $ref: '#/components/schemas/ProfileContactDetails'
        businessName:
          type: string
          example: "Innovate Solutions Ltd"
        registrationNumber:
          type: string
          example: "SC1234567890ABCD"
        descriptionOfBusiness:
          type: string
          description: "Business activity category. Common values include SOFTWARE_DEVELOPMENT, CONSULTING, RETAIL, MANUFACTURING, etc."
          example: "SOFTWARE_DEVELOPMENT"
        webpage:
          type: string
          format: uri
          nullable: true
          example: "https://www.innovate-solutions.co.uk"
        companyType:
          type: string
          description: "The type of business entity. Common values include LIMITED_COMPANY, PARTNERSHIP, SOLE_TRADER, etc."
          example: "LIMITED_COMPANY"
        businessFreeFormDescription:
          type: string
          nullable: true
          example: "We create cutting-edge software for businesses."
        firstLevelCategory:
          type: string
          description: "Primary business category. Common values include TECHNOLOGY, FINANCE, RETAIL, etc."
          example: "TECHNOLOGY"
        secondLevelCategory:
          type: string
          description: "Secondary business category. Common values include SOFTWARE_SERVICES, CONSULTING_SERVICES, etc."
          example: "SOFTWARE_SERVICES"
        operationalAddresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
          example: []
        fullName:
          type: string
          example: "Innovate Solutions Ltd"

    CreateVerificationDocumentResponse:
      type: object
      properties:
        errorMessage:
          type: string
          nullable: true
        success:
          type: boolean

    ApiError:
      type: object
      description: "API error response that can represent either system errors or client errors"
      oneOf:
        - $ref: '#/components/schemas/SystemError'
        - $ref: '#/components/schemas/ClientError'

    SystemError:
      type: object
      description: "System errors are not typically caused by the end user and often require involvement to remedy"
      properties:
        error:
          type: string
          description: "Error code identifier"
          example: "invalid_token"
        error_description:
          type: string
          description: "Error description or identifier"
          example: "945fdc16-56cb-4039-90b4-998d583740ce"
      required:
        - error
        - error_description

    ClientError:
      type: object
      description: "Client errors consist of issues solvable by the end user or application client issues"
      properties:
        errors:
          type: array
          description: "Array of error objects providing detailed information about validation or input errors"
          items:
            $ref: '#/components/schemas/ClientErrorDetail'
          minItems: 1
      required:
        - errors

    ClientErrorDetail:
      type: object
      description: "Detailed error information for client errors"
      properties:
        code:
          type: string
          description: "Specific error code"
          example: "error.greaterThanZero"
        message:
          type: string
          description: "Human-readable error message"
          example: "Please type in a number that's larger than 0."
        path:
          type: string
          description: "The field path that caused the error"
          example: "sourceAmount"
        arguments:
          type: array
          description: "Additional arguments related to the error"
          items:
            type: string
          example: ["targetRecipientId"]
      required:
        - code
        - message
        - path
        - arguments
    Director:
      type: object
      properties:
        id:
          type: integer
          example: 10
        firstName:
          type: string
          example: "John"
        lastName:
          type: string
          example: "Doe"
        dateOfBirth:
          type: string
          format: date
          example: "1982-05-20"
        countryOfResidenceIso3Code:
          type: string
          example: "usa"
    UBO:
      type: object
      properties:
        id:
          type: string
          example: "013ab1c2688d0185b582ee7e0bcb28b2"
        name:
          type: string
          example: "John Doe"
        dateOfBirth:
          type: string
          format: date
          example: "1982-05-20"
        countryOfResidenceIso3Code:
          type: string
          example: "usa"
        addressFirstLine:
          type: string
          example: "123 Fake St"
        postCode:
          type: string
          example: "FK 12345"
        ownershipPercentage:
          type: integer
          example: 30
    VerificationStatusResponse:
      type: object
      properties:
        routes:
          type: array
          items:
            type: object
            properties:
              source_currency:
                type: string
                example: "GBP"
              maximum_entitled_amount:
                type: number
                example: 100000
              current_status:
                type: string
                example: "verified"
        request_id:
          type: string
          example: "e66da5f6-2456-403c-bfcb-908885ee1a61"
    Activity:
      type: object
      properties:
        id:
          type: string
          description: Unique activity identifier
        type:
          $ref: '#/components/schemas/ActivityType'
        resource:
          $ref: '#/components/schemas/ActivityResource'
        title:
          type: string
          description: |
            Title with custom formatting tags:
            <strong>, <positive>, <negative>, <strikethrough>
        description:
          type: string
          description: Brief activity summary
        primaryAmount:
          type: string
          description: Currency-formatted primary amount (e.g., "100 USD")
        secondaryAmount:
          type: string
          description: Currency-formatted secondary amount (optional)
        status:
          $ref: '#/components/schemas/ActivityStatus'
        createdOn:
          type: string
          format: date-time
        updatedOn:
          type: string
          format: date-time
      required:
        - id
        - type
        - resource
        - title
        - status
        - createdOn
        - updatedOn

    ActivityResource:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ActivityResourceType'
        id:
          type: string
          description: Resource identifier
      required:
        - type
        - id

    ActivitiesResponse:
      type: object
      properties:
        cursor:
          type: string
          nullable: true
          description: Pagination cursor for next page
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'

    ActivityType:
      type: string
      description: "Type of activity performed on the platform. Common values include ACQUIRING_PAYMENT, AUTO_CONVERSION, BALANCE_ADJUSTMENT, BALANCE_ASSET_FEE, BALANCE_CASHBACK, BALANCE_DEPOSIT, BALANCE_HOLD_FEE, BALANCE_INTEREST, BANK_DETAILS_ORDER, BATCH_TRANSFER, CARD_CASHBACK, CARD_CHECK, CARD_ORDER, CARD_PAYMENT, CASH_WITHDRAWAL, CLAIMABLE_SEND_ORDER, DIRECT_DEBIT_TRANSACTION, EXCESS_REFUND, FEE_REFUND, INCORPORATION_ORDER, INTERBALANCE, PAYMENT_REQUEST, PREFUNDING_TRANSFER, REWARD, SCHEDULED_SEND_ORDER, TRANSFER. This list is not exhaustive and additional activity types may be supported."

    ActivityResourceType:
      type: string
      description: "Activity resource type enumeration. Common values include ACCRUAL_CHARGE, ACQUIRING_PAYMENT, ASSETS_WITHDRAWAL, BALANCE_CASHBACK, BALANCE_INTEREST, BALANCE_TRANSACTION, BANK_DETAILS_ORDER, BATCH_TRANSFER, CARD_CASHBACK, CARD_ORDER, CARD_TRANSACTION, DIRECT_DEBIT_INSTRUCTION, DIRECT_DEBIT_TRANSACTION, FEE_REFUND, INCIDENT_REFUND, INCORPORATION_ORDER, OPERATIONAL_TRANSACTION, PAYMENT_REQUEST, REWARD, REWARDS_REDEMPTION, SEND_ORDER, SEND_ORDER_EXECUTION, TRANSFER. This list may be extended by the API provider."

    ActivityStatus:
      type: string
      description: "Status of an activity in the system. Common values include REQUIRES_ATTENTION, IN_PROGRESS, UPCOMING, COMPLETED, and CANCELLED. This list may be extended by the API provider."

    Quote:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/QuoteId'
        sourceCurrency:
          $ref: '#/components/schemas/Currency'
        targetCurrency:
          $ref: '#/components/schemas/Currency'
        sourceAmount:
          type: number
          format: double
          example: 100
        targetAmount:
          type: number
          format: double
          example: 129.24
        payOut:
          type: string
          description: "The payout method for this quote. Common values include BANK_TRANSFER, BALANCE, SWIFT, SWIFT_OUR, INTERAC, but other values may be supported."
          example: BANK_TRANSFER
        rate:
          type: number
          format: double
          example: 1.30445
        createdTime:
          type: string
          format: date-time
          example: "2019-04-05T13:18:58Z"
        profile:
          $ref: '#/components/schemas/ProfileId'
        rateType:
          type: string
          description: "The type of rate applied to this quote. Common values include FIXED and FLOATING."
          example: FIXED
        rateExpirationTime:
          type: string
          format: date-time
          example: "2019-04-08T13:18:57Z"
        providedAmountType:
          type: string
          description: "Indicates which amount was provided when creating the quote. SOURCE means the source amount was specified, TARGET means the target amount was specified. Common values include SOURCE and TARGET."
          example: SOURCE
        pricingConfiguration:
          $ref: '#/components/schemas/PricingConfiguration'
        paymentOptions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentOption'
        status:
          type: string
          description: "The current status of the quote. Common values include PENDING, ACCEPTED, FUNDED, and EXPIRED."
          example: PENDING
        expirationTime:
          type: string
          format: date-time
          example: "2019-04-05T13:48:58Z"
        notices:
          type: array
          items:
            $ref: '#/components/schemas/Notice'

    PricingConfiguration:
      type: object
      properties:
        fee:
          $ref: '#/components/schemas/FeeConfiguration'

    FeeConfiguration:
      type: object
      required:
        - type
        - variable
        - fixed
      properties:
        type:
          type: string
          description: "The fee calculation method. OVERRIDE means the fee is a fixed amount regardless of the transfer amount."
        variable:
          type: number
          format: double
        fixed:
          type: number
          format: double

    PaymentOption:
      type: object
      properties:
        disabled:
          type: boolean
        estimatedDelivery:
          type: string
          format: date-time
          nullable: true
        formattedEstimatedDelivery:
          type: string
          nullable: true
        fee:
          $ref: '#/components/schemas/FeeDetails'
        price:
          $ref: '#/components/schemas/PriceDetails'
        payIn:
          type: string
        payOut:
          type: string

    FeeDetails:
      type: object
      properties:
        total:
          type: number
          format: double

    PriceDetails:
      type: object
      properties:
        total:
          $ref: '#/components/schemas/TotalPrice'

    TotalPrice:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/Amount'

    Amount:
      type: object
      properties:
        amount:
          type: number
          format: double
        currency:
          type: string

    Notice:
      type: object
      properties:
        text:
          type: string
        type:
          type: string
          description: "The type of notice. Common values include WARNING, INFO, and BLOCKED."

    PaymentMetadata:
      type: object
      properties:
        transferNature:
          type: string
          description: "Optional. Used to pass transfer nature for calculating proper tax amounts (IOF) for transfers to and from BRL."
          example: "MOVING_MONEY_BETWEEN_OWN_ACCOUNTS"
      nullable: true
      description: "Metadata object used to pass additional information about the intended transfer, particularly for BRL transfers where transfer nature affects tax calculations."

    CreateUnauthenticatedQuoteRequestBase:
      type: object
      required:
        - sourceCurrency
        - targetCurrency
      properties:
        sourceCurrency:
          $ref: '#/components/schemas/Currency'
        targetCurrency:
          $ref: '#/components/schemas/Currency'
        pricingConfiguration:
          $ref: '#/components/schemas/PricingConfiguration'

    CreateUnauthenticatedSourceAmountQuoteRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/CreateUnauthenticatedQuoteRequestBase'
        - type: object
          required: [ sourceAmount ]
          properties:
            sourceAmount:
              type: number
              format: double
              description: "The amount in the source currency. Must be greater than 0."
              exclusiveMinimum: 0

    CreateUnauthenticatedTargetAmountQuoteRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/CreateUnauthenticatedQuoteRequestBase'
        - type: object
          required: [ targetAmount ]
          properties:
            targetAmount:
              type: number
              format: double
              description: "The amount in the target currency. Must be greater than 0."
              exclusiveMinimum: 0

    CreateAuthenticatedQuoteRequestBase:
      type: object
      required:
        - sourceCurrency
        - targetCurrency
      properties:
        sourceCurrency:
          $ref: '#/components/schemas/Currency'
        targetCurrency:
          $ref: '#/components/schemas/Currency'
        targetAccount:
          $ref: '#/components/schemas/RecipientId'
        payOut:
          type: string
          nullable: true
          description: "Optional. Preferred payout method. Default value is BANK_TRANSFER. Common values include BANK_TRANSFER, BALANCE, SWIFT, SWIFT_OUR, INTERAC, but other values may be supported."
          example: BANK_TRANSFER
        preferredPayIn:
          type: string
          nullable: true
          description: "Optional. Preferred payin method. Use BANK_TRANSFER to return this method at the top of the response's results. Common values include BANK_TRANSFER, BALANCE, SWIFT, SWIFT_OUR, INTERAC, but other values may be supported."
          example: BANK_TRANSFER
        paymentMetadata:
          $ref: '#/components/schemas/PaymentMetadata'
        pricingConfiguration:
          $ref: '#/components/schemas/PricingConfiguration'

    CreateAuthenticatedSourceAmountQuoteRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/CreateAuthenticatedQuoteRequestBase'
        - type: object
          required: [ sourceAmount ]
          properties:
            sourceAmount:
              type: number
              format: double
              description: "The amount in the source currency. Must be greater than 0."
              exclusiveMinimum: 0

    CreateAuthenticatedTargetAmountQuoteRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/CreateAuthenticatedQuoteRequestBase'
        - type: object
          required: [ targetAmount ]
          properties:
            targetAmount:
              type: number
              format: double
              description: "The amount in the target currency. Must be greater than 0."
              exclusiveMinimum: 0

    UpdateQuoteRequest:
      type: object
      properties:
        targetAccount:
          type: integer
          format: int64
          minimum: 0
        payOut:
          type: string
        paymentMetadata:
          $ref: '#/components/schemas/PaymentMetadata'
        pricingConfiguration:
          $ref: '#/components/schemas/PricingConfiguration'
    Recipient:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RecipientId'
        creatorId:
          $ref: '#/components/schemas/UserId'
        profileId:
          $ref: '#/components/schemas/ProfileId'
        name:
          type: object
          properties:
            fullName:
              type: string
              example: John Doe
            givenName:
              type: string
              nullable: true
            familyName:
              type: string
              nullable: true
            middleName:
              type: string
              nullable: true
        currency:
          $ref: '#/components/schemas/Currency'
        country:
          type: string
          example: GB
          nullable: true
        type:
          type: string
          example: SortCode
        legalEntityType:
          type: string
          example: PERSON
        active:
          type: boolean
        details:
          type: object
          properties:
            reference:
              type: string
              nullable: true
            sortCode:
              type: string
              example: "040075"
              nullable: true
            accountNumber:
              type: string
              example: "37778842"
              nullable: true
        commonFieldMap:
          type: object
          properties:
            bankCodeField:
              type: string
              example: sortCode
        hash:
          type: string
        accountSummary:
          type: string
        longAccountSummary:
          type: string
        displayFields:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              label:
                type: string
              value:
                type: string
        ownedByCustomer:
          type: boolean

    CreateRecipientRequest:
      type: object
      required:
        - currency
        - type
        - profile
        - accountHolderName
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        type:
          type: string
          description: "The type of recipient account, determined from the account requirements."
          example: 'sort_code'
        profile:
          $ref: '#/components/schemas/ProfileId'
          description: "The profile ID that the recipient will be created under."
        accountHolderName:
          type: string
          description: "The recipient's full name."
          example: 'John Doe'
        ownedByCustomer:
          type: boolean
          description: "Whether this account is owned by the sending user."
      additionalProperties: true
      description: "Beyond the fixed fields, this object accepts a dynamic set of properties based on the response from the `/v1/quotes/{quoteId}/account-requirements` endpoint. This can include simple fields or nested objects like 'details' and 'address' when required for a specific currency route."
      example:
        currency: "GBP"
        type: "sort_code"
        profile: 30000000
        accountHolderName: "John Doe"
        ownedByCustomer: true
        details:
          legalType: "PRIVATE"
          sortCode": "040075"
          accountNumber: "37778842"
        address:
          country: "GB"
          city: "London"
          postCode: "E14 5LQ"

    PaginatedRecipients:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Recipient'
        size:
          type: integer
          example: 1

    AccountRequirements:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
          title:
            type: string
          fields:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                group:
                  type: array
                  items:
                    type: object
                    properties:
                      key:
                        type: string
                      name:
                        type: string
                      type:
                        type: string
                      required:
                        type: boolean
                      validationRegexp:
                        type: string
                        nullable: true
                      valuesAllowed:
                        type: array
                        nullable: true
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            name:
                              type: string
    StandardTransfer:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TransferId'
        user:
          type: integer
          example: 4342275
        targetAccount:
          type: integer
          example: 8692237
        sourceAccount:
          type: integer
          nullable: true
        quote:
          type: integer
          nullable: true
        quoteUuid:
          $ref: '#/components/schemas/QuoteId'
        status:
          type: string
          description: "The current status of the transfer. Common values include pending, processing, funded, cancelled, outgoing_payment_sent, funds_refunded. This list may be extended by the API provider."
        reference:
          type: string
          deprecated: true
        rate:
          type: number
          format: float
          example: 0.89
        created:
          type: string
          format: date-time
        business:
          type: integer
          nullable: true
        transferRequest:
          type: integer
          nullable: true
          deprecated: true
        details:
          $ref: '#/components/schemas/TransferDetails'
        hasActiveIssues:
          type: boolean
        sourceCurrency:
          $ref: '#/components/schemas/Currency'
        sourceValue:
          type: number
          format: float
        targetCurrency:
          $ref: '#/components/schemas/Currency'
        targetValue:
          type: number
          format: float
        customerTransactionId:
          type: string
          format: uuid
      required:
        - id
        - user
        - targetAccount
        - quoteUuid
        - status
        - rate
        - created
        - details
        - sourceCurrency
        - sourceValue
        - targetCurrency
        - targetValue

    OriginatorTransfer:
      allOf:
        - $ref: '#/components/schemas/StandardTransfer'
        - type: object
          properties:
            originator:
              $ref: '#/components/schemas/Originator'
            originalTransferId:
              type: string
              format: uuid
          required:
            - originator
            - originalTransferId

    Originator:
      type: object
      properties:
        legalEntityType:
          type: string
          description: "The legal entity type of the originator. Common values are PRIVATE for individuals and BUSINESS for companies. This list may be extended by the API provider."
        reference:
          type: string
        name:
          $ref: '#/components/schemas/OriginatorName'
        dateOfBirth:
          type: string
          format: date
        businessRegistrationCode:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/OriginatorAddress'
        accountDetails:
          type: string
          nullable: true
      required:
        - legalEntityType
        - reference
        - address

    OriginatorName:
      type: object
      properties:
        givenName:
          type: string
        middleNames:
          type: array
          items:
            type: string
        familyName:
          type: string
        patronymicName:
          type: string
          nullable: true
        fullName:
          type: string
      required:
        - givenName
        - familyName

    OriginatorAddress:
      type: object
      properties:
        firstLine:
          type: string
        city:
          type: string
        stateCode:
          type: string
          nullable: true
        countryCode:
          type: string
          pattern: '^[A-Z]{2}$'
        postCode:
          type: string
          nullable: true
      required:
        - firstLine
        - city
        - countryCode

    TransferDetails:
      type: object
      properties:
        reference:
          type: string
          maxLength: 100
        transferPurpose:
          type: string
        transferPurposeSubTransferPurpose:
          type: string
        transferPurposeInvoiceNumber:
          type: string
        sourceOfFunds:
          type: string
      required:
        - reference

    CreateStandardTransferRequest:
      type: object
      properties:
        sourceAccount:
          type: integer
          nullable: true
        targetAccount:
          type: integer
        quoteUuid:
          type: string
          format: uuid
        customerTransactionId:
          type: string
          format: uuid
        details:
          $ref: '#/components/schemas/TransferDetails'
      required:
        - targetAccount
        - quoteUuid
        - customerTransactionId
        - details

    CreateThirdPartyTransferRequest:
      type: object
      properties:
        targetAccount:
          type: integer
        quote:
          type: string
          format: uuid
        originalTransferId:
          type: string
          format: uuid
        details:
          $ref: '#/components/schemas/TransferDetails'
        originator:
          $ref: '#/components/schemas/Originator'
      required:
        - targetAccount
        - quote
        - originalTransferId
        - originator

    CreatePartnerLicenceTransferRequest:
      type: object
      properties:
        sourceAccount:
          type: integer
          nullable: true
        targetAccount:
          type: integer
        quote:
          type: string
          format: uuid
        customerTransactionId:
          type: string
          format: uuid
        details:
          $ref: '#/components/schemas/TransferDetails'
        originator:
          $ref: '#/components/schemas/Originator'
      required:
        - targetAccount
        - quote
        - customerTransactionId
        - originator

    TransferRequirementsRequest:
      type: object
      properties:
        targetAccount:
          type: integer
        quoteUuid:
          type: string
          format: uuid
        details:
          type: object
        customerTransactionId:
          type: string
          format: uuid
      required:
        - targetAccount
        - quoteUuid

    TransferRequirementsResponse:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
            description: "Common values include transfer. This list may be extended by the API provider."
          fields:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                group:
                  type: array
                  items:
                    $ref: '#/components/schemas/RequirementField'

    RequirementField:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
        type:
          type: string
          description: "The type of the field. Common values include text and select. This list may be extended by the API provider."
        refreshRequirementsOnChange:
          type: boolean
        required:
          type: boolean
        displayFormat:
          type: string
          nullable: true
        example:
          type: string
          nullable: true
        minLength:
          type: integer
          nullable: true
        maxLength:
          type: integer
          nullable: true
        validationRegexp:
          type: string
          nullable: true
        valuesAllowed:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              name:
                type: string

    PaymentRequest:
      type: object
      properties:
        type:
          type: string
          description: "The payment method type. Common values include BALANCE and TRUSTED_PRE_FUND_BULK. This list may be extended by the API provider."
        partnerReference:
          type: string
      required:
        - type

    PaymentResponse:
      type: object
      properties:
        type:
          type: string
        status:
          type: string
          description: "The status of the payment. Common values include COMPLETED and REJECTED. This list may be extended by the API provider."
        errorCode:
          type: string
          nullable: true

    PaymentsList:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          method:
            type: string
          pricingVariant:
            type: string
            nullable: true
          amount:
            type: number
          currency:
            type: string
          timeCreated:
            type: string
            format: date-time
          timeUpdated:
            type: string
            format: date-time

    BankingPartnerInvoice:
      type: object
      properties:
        processorName:
          type: string
        deliveryMode:
          type: string
        bankingPartnerReference:
          type: string
        bankingPartnerName:
          type: string
        mt103:
          type: string
          nullable: true

  parameters:
    profileId:
      name: profileId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ProfileId'
    transferId:
      name: transferId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/TransferId'
    profile:
      name: profile
      in: query
      schema:
        $ref: '#/components/schemas/ProfileId'
    status:
      name: status
      in: query
      schema:
        type: string
    sourceCurrency:
      name: sourceCurrency
      in: query
      schema:
        type: string
        pattern: '^[A-Z]{3}$'
        minLength: 3
        maxLength: 3
    targetCurrency:
      name: targetCurrency
      in: query
      schema:
        type: string
        pattern: '^[A-Z]{3}$'
        minLength: 3
        maxLength: 3
    createdDateStart:
      name: createdDateStart
      in: query
      schema:
        type: string
        format: date-time
    createdDateEnd:
      name: createdDateEnd
      in: query
      schema:
        type: string
        format: date-time
    limit:
      name: limit
      in: query
      schema:
        type: integer
        default: 20
        minimum: 1
        maximum: 1000
    offset:
      name: offset
      in: query
      schema:
        type: integer
        default: 0
        minimum: 0
    quoteId:
      name: quoteId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/QuoteId'
    accountId:
      name: accountId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/RecipientId'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  responses:
    BadRequest:
      description: Bad request. Request message data did not pass validation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'

    Unauthorized:
      description: Unauthorised. Not authorised to access requested data.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'

    Forbidden:
      description: Forbidden. Access to requested data is forbidden.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'

    NotFound:
      description: Not Found. Requested resource does not exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'

    Timeout:
      description: Timeout. Operation timed out.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'

    UnprocessableEntity:
      description: Unprocessable entity. Request message data did not pass validation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'

    TooManyRequests:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'

    ClientError:
      description: Client Error - Bad request, unauthorized, forbidden, not found, or validation error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'

    ServerError:
      description: Server error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'

    InternalServerError:
      description: Server Error - Internal server error or service unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
security:
  - BearerAuth: [ ]
paths:
  /v2/profiles/personal-profile:
    post:
      tags:
        - Profiles
      summary: Create a personal profile
      operationId: createPersonalProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - firstName
                - lastName
                - address
                - nationality
                - dateOfBirth
                - contactDetails
              properties:
                firstName:
                  type: string
                  maxLength: 30
                lastName:
                  type: string
                  maxLength: 30
                address:
                  type: object
                  required:
                    - addressFirstLine
                    - city
                    - countryIso3Code
                  properties:
                    addressFirstLine:
                      type: string
                    city:
                      type: string
                    countryIso3Code:
                      type: string
                contactDetails:
                  type: object
                  required:
                    - email
                    - phoneNumber
                  properties:
                    email:
                      type: string
                      format: email
                    phoneNumber:
                      type: string
      responses:
        '200':
          description: Personal profile created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalProfile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /v2/profiles/business-profile:
    post:
      tags:
        - Profiles
      summary: Create a business profile
      operationId: createBusinessProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - businessName
                - registrationNumber
                - companyType
                - address
              properties:
                businessName:
                  type: string
                registrationNumber:
                  type: string
                companyType:
                  type: string
                  description: "The type of business entity. Common values include LIMITED and PARTNERSHIP."
      responses:
        '200':
          description: Business profile created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessProfile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /v2/profiles/{profileId}/personal-profile:
    put:
      tags:
        - Profiles
      summary: Update a personal profile
      operationId: updatePersonalProfile
      parameters:
        - $ref: '#/components/parameters/profileId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  maxLength: 30
                lastName:
                  type: string
                  maxLength: 30
      responses:
        '200':
          description: Personal profile updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalProfile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /v2/profiles/{profileId}/business-profile:
    put:
      tags:
        - Profiles
      summary: Update a business profile
      operationId: updateBusinessProfile
      parameters:
        - $ref: '#/components/parameters/profileId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                businessName:
                  type: string
                registrationNumber:
                  type: string
      responses:
        '200':
          description: Business profile updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessProfile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /v2/profiles/{profileId}:
    get:
      tags:
        - Profiles
      summary: Retrieve a profile by ID
      operationId: getProfileById
      parameters:
        - $ref: '#/components/parameters/profileId'
      responses:
        '200':
          description: Profile details
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PersonalProfile'
                  - $ref: '#/components/schemas/BusinessProfile'
                discriminator:
                  propertyName: type
                  mapping:
                    PERSONAL: '#/components/schemas/PersonalProfile'
                    BUSINESS: '#/components/schemas/BusinessProfile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /v2/profiles:
    get:
      tags:
        - Profiles
      summary: List profiles for a user account
      operationId: listProfiles
      responses:
        '200':
          description: List of profiles
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/PersonalProfile'
                    - $ref: '#/components/schemas/BusinessProfile'
                  discriminator:
                    propertyName: type
                    mapping:
                      PERSONAL: '#/components/schemas/PersonalProfile'
                      BUSINESS: '#/components/schemas/BusinessProfile'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /v1/profiles/{profileId}/verification-documents:
    post:
      tags:
        - Profiles
      summary: Create identification document
      operationId: createVerificationDocument
      parameters:
        - $ref: '#/components/parameters/profileId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - uniqueIdentifier
              properties:
                type:
                  type: string
                  description: "Common values include  DRIVERS_LICENCE, IDENTITY_CARD. This list may be extended by the API provider."
                uniqueIdentifier:
                  type: string
      responses:
        '200':
          description: Document created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVerificationDocumentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /v1/profiles/{profileId}/directors:
    post:
      tags:
        - Profiles
      summary: Add directors
      operationId: addDirectors
      parameters:
        - $ref: '#/components/parameters/profileId'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Director'
      responses:
        '200':
          description: Directors added
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Director'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
    get:
      tags:
        - Profiles
      summary: List directors
      operationId: listDirectors
      parameters:
        - $ref: '#/components/parameters/profileId'
      responses:
        '200':
          description: List of directors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Director'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Profiles
      summary: Update directors
      operationId: updateDirectors
      parameters:
        - $ref: '#/components/parameters/profileId'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Director'
      responses:
        '200':
          description: Directors updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Director'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /v3/profiles/{profileId}/verification-status/bank-transfer:
    post:
      tags:
        - Profiles
      summary: Check verification status
      operationId: checkVerificationStatus
      parameters:
        - $ref: '#/components/parameters/profileId'
        - name: source_currencies
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Verification status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationStatusResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'

  /v1/profiles/{profileId}/activities:
    get:
      tags:
        - Activities
      summary: List activities for a profile
      description: Retrieve paginated list of activities for a user profile with filtering options
      operationId: listActivities
      parameters:
        - $ref: '#/components/parameters/profileId'
        - name: monetaryResourceType
          in: query
          schema:
            $ref: '#/components/schemas/ActivityResourceType'
          description: Filter by resource type
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/ActivityStatus'
          description: Filter by activity status
        - name: since
          in: query
          schema:
            type: string
            format: date-time
          description: Filter activities created after this timestamp
        - name: until
          in: query
          schema:
            type: string
            format: date-time
          description: Filter activities created before this timestamp
        - name: nextCursor
          in: query
          schema:
            type: string
          description: Pagination cursor for next page
        - name: size
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Number of results per page
      responses:
        '200':
          description: Successful response with activities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BearerAuth: [ ]
  /v3/quotes:
    post:
      tags:
        - Quotes
      summary: Create an unauthenticated quote
      description: Creates an example quote for illustration purposes. The returned quote cannot be used to create transfers.
      operationId: createUnauthenticatedQuote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CreateUnauthenticatedSourceAmountQuoteRequest'
                - $ref: '#/components/schemas/CreateUnauthenticatedTargetAmountQuoteRequest'
      responses:
        '200':
          description: Successfully created unauthenticated quote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
      security: [ ]

  /v3/profiles/{profileId}/quotes:
    post:
      tags:
        - Quotes
      summary: Create an authenticated quote
      description: Creates a quote associated with a profile. Requires user authentication.
      operationId: createAuthenticatedQuote
      parameters:
        - $ref: '#/components/parameters/profileId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CreateAuthenticatedSourceAmountQuoteRequest'
                - $ref: '#/components/schemas/CreateAuthenticatedTargetAmountQuoteRequest'
      responses:
        '200':
          description: Successfully created authenticated quote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
          links:
            GetQuoteById:
              operationId: getQuoteById
              parameters:
                quoteId: '$response.body#/id'
                profileId: '$request.path.profileId'
            UpdateQuote:
              operationId: updateQuote
              parameters:
                quoteId: '$response.body#/id'
                profileId: '$request.path.profileId'
            GetAccountRequirements:
              operationId: getAccountRequirements
              parameters:
                quoteId: '$response.body#/id'
            GetRefinedAccountRequirements:
              operationId: getRefinedAccountRequirements
              parameters:
                quoteId: '$response.body#/id'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BearerAuth: [ ]

  /v3/profiles/{profileId}/quotes/{quoteId}:
    patch:
      tags:
        - Quotes
      summary: Update a quote
      description: Updates a quote with recipient information or payment metadata.
      operationId: updateQuote
      parameters:
        - $ref: '#/components/parameters/profileId'
        - $ref: '#/components/parameters/quoteId'
      requestBody:
        required: true
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateQuoteRequest'
      responses:
        '200':
          description: Successfully updated quote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BearerAuth: [ ]

    get:
      tags:
        - Quotes
      summary: Retrieve a quote by ID
      description: Retrieves a quote by its ID. Expired quotes are available for ~48 hours.
      operationId: getQuoteById
      parameters:
        - $ref: '#/components/parameters/profileId'
        - $ref: '#/components/parameters/quoteId'
      responses:
        '200':
          description: Successfully retrieved quote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BearerAuth: [ ]
  /v1/accounts:
    post:
      tags:
        - Recipients
      summary: Create a recipient account
      operationId: createRecipientAccount
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRecipientRequest'
      responses:
        '200':
          description: Created recipient account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'
          links:
            GetRecipientAccountById:
              operationId: getRecipientAccountById
              parameters:
                accountId: '$response.body#/id'
            DeactivateRecipientAccount:
              operationId: deactivateRecipientAccount
              parameters:
                accountId: '$response.body#/id'
            UpdateQuote:
              operationId: updateQuote
              requestBody: '{"targetAccount": $response.body#/id}'
            CreateAuthenticatedQuote:
              operationId: createAuthenticatedQuote
              requestBody: '{"targetAccount": $response.body#/id}'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'

  /v2/accounts:
    get:
      tags:
        - Recipients
      summary: List recipient accounts
      operationId: listRecipientAccounts
      security:
        - BearerAuth: [ ]
      parameters:
        - name: profileId
          in: query
          schema:
            type: integer
        - name: currency
          in: query
          schema:
            type: string
            pattern: '^[A-Z]{3}$'
            minLength: 3
            maxLength: 3
        - name: size
          in: query
          schema:
            type: integer
            default: 20
            format: int8
        - name: seekPosition
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: List of recipient accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRecipients'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'

  /v2/accounts/{accountId}:
    get:
      tags:
        - Recipients
      summary: Get recipient account by ID
      operationId: getRecipientAccountById
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/accountId'
      responses:
        '200':
          description: Recipient account details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Recipients
      summary: Deactivate a recipient account
      operationId: deactivateRecipientAccount
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/accountId'
      responses:
        '200':
          description: Deactivated recipient
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'

  /v1/quotes/{quoteId}/account-requirements:
    get:
      tags:
        - Recipients
      summary: Get account requirements for a quote
      operationId: getAccountRequirements
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/quoteId'
        - name: originatorLegalEntityType
          in: query
          schema:
            type: string
            description: "Common values include BUSINESS, PRIVATE. This list may be extended by the API provider."
        - name: addressRequired
          in: query
          schema:
            type: boolean
          description: "Set to true to force the address fields to be returned as required."
        - name: Accept-Minor-Version
          in: header
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      responses:
        '200':
          description: Account requirements
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountRequirements"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Recipients
      summary: Get refined account requirements for a quote
      description: "Use this endpoint to get additional requirements that may appear after a user provides certain information. For example, after selecting a country that has states, this endpoint will return the list of states. The request body should contain the recipient information collected so far."
      operationId: getRefinedAccountRequirements
      security:
        - BearerAuth: [ ]
      parameters:
        - name: quoteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: "The ID of the quote."
        - name: originatorLegalEntityType
          in: query
          schema:
            type: string
            description: "Common values include BUSINESS, PRIVATE. This list may be extended by the API provider."
          description: "The legal entity type of the sender. Required for some routes when the sender is a third party."
        - name: addressRequired
          in: query
          schema:
            type: boolean
          description: "Set to true to always include address fields in the response."
        - name: Accept-Minor-Version
          in: header
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
          description: "Set to '1' to use version 1.1 which includes dynamic fields for name and email."
      requestBody:
        description: "A partial or complete recipient object based on the requirements you have already received."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRecipientRequest'
      responses:
        '200':
          description: "Successfully retrieved refined account requirements."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRequirements'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /v1/transfers:
    post:
      tags:
        - Transfers
      summary: Create a standard transfer
      operationId: createTransfer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStandardTransferRequest'
      responses:
        '200':
          description: Transfer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BearerAuth: [ ]

    get:
      tags:
        - Transfers
      summary: List transfers
      operationId: listTransfers
      parameters:
        - $ref: '#/components/parameters/profile'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/sourceCurrency'
        - $ref: '#/components/parameters/targetCurrency'
        - $ref: '#/components/parameters/createdDateStart'
        - $ref: '#/components/parameters/createdDateEnd'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: List of transfers
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/StandardTransfer'
                    - $ref: '#/components/schemas/OriginatorTransfer'
      security:
        - BearerAuth: [ ]

  /v1/transfers/{transferId}:
    get:
      tags:
        - Transfers
      summary: Get transfer by ID
      operationId: getTransferById
      parameters:
        - $ref: '#/components/parameters/transferId'
      responses:
        '200':
          description: Transfer details
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/StandardTransfer'
                  - $ref: '#/components/schemas/OriginatorTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BearerAuth: [ ]

    put:
      tags:
        - Transfers
      summary: Cancel transfer
      operationId: cancelTransfer
      parameters:
        - $ref: '#/components/parameters/transferId'
      responses:
        '200':
          description: Transfer cancelled
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/StandardTransfer'
                  - $ref: '#/components/schemas/OriginatorTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BearerAuth: [ ]

  /v1/transfers/{transferId}/receipt.pdf:
    get:
      tags:
        - Transfers
      summary: Get transfer receipt PDF
      operationId: getTransferReceipt
      parameters:
        - $ref: '#/components/parameters/transferId'
      responses:
        '200':
          description: PDF receipt
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BearerAuth: [ ]

  /v1/transfers/{transferId}/documents/noc:
    get:
      tags:
        - Transfers
      summary: Get NOC document
      operationId: getNocDocument
      parameters:
        - $ref: '#/components/parameters/transferId'
      responses:
        '200':
          description: NOC PDF document
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BearerAuth: [ ]

  /v2/transfers/{transferId}/invoices/bankingpartner:
    get:
      tags:
        - Transfers
      summary: Get banking partner invoice (v2)
      operationId: getBankingPartnerInvoice
      parameters:
        - $ref: '#/components/parameters/transferId'
      responses:
        '200':
          description: Banking partner invoice details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankingPartnerInvoice'

        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BearerAuth: [ ]

  /v1/transfers/{transferId}/payments:
    get:
      tags:
        - Transfers
      summary: List transfer payments
      operationId: listTransferPayments
      parameters:
        - $ref: '#/components/parameters/transferId'
      responses:
        '200':
          description: List of payments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BearerAuth: [ ]

  /v2/profiles/{profileId}/third-party-transfers:
    post:
      tags:
        - Transfers
      summary: Create third-party transfer
      operationId: createThirdPartyTransfer
      parameters:
        - $ref: '#/components/parameters/profileId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateThirdPartyTransferRequest'
      responses:
        '201':
          description: Transfer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginatorTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BearerAuth: [ ]

  /v2/profiles/{profileId}/third-party-transfers/{transferId}:
    get:
      tags:
        - Transfers
      summary: Get third-party transfer
      operationId: getThirdPartyTransfer
      parameters:
        - $ref: '#/components/parameters/profileId'
        - $ref: '#/components/parameters/transferId'
      responses:
        '200':
          description: Transfer details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginatorTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BearerAuth: [ ]

  /v1/profiles/{profileId}/partner-licence-transfers:
    post:
      tags:
        - Transfers
      summary: Create partner license
      operationId: createPartnerLicenceTransfer
      parameters:
        - $ref: '#/components/parameters/profileId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePartnerLicenceTransferRequest'
      responses:
        '201':
          description: Transfer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginatorTransfer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BearerAuth: [ ]

  /v1/transfer-requirements:
    post:
      tags:
        - Transfers
      summary: Get transfer requirements
      operationId: calculateTransferRequirements
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequirementsRequest'
      responses:
        '200':
          description: Transfer requirements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferRequirementsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BearerAuth: [ ]

  /v3/profiles/{profileId}/transfers/{transferId}/payments:
    post:
      tags:
        - Transfers
      summary: Fund a transfer
      operationId: fundTransfer
      parameters:
        - $ref: '#/components/parameters/profileId'
        - $ref: '#/components/parameters/transferId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      responses:
        '200':
          description: Payment processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '4XX':
          $ref: '#/components/responses/ClientError'
        '500':
          $ref: '#/components/responses/ServerError'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BearerAuth: [ ]
